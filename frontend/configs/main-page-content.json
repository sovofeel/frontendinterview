{
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/array-iterate-methods.mdx": [
    {
      "id": "b4ce726f-33f4-40a3-b79e-e489c4dc5471",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/bind-call-apply.mdx": [
    {
      "id": "68f2b9c0-2813-4d63-8c59-99c4a2be1e4a",
      "answer": false,
      "example": false
    },
    {
      "id": "cf551bbb-d59f-47ab-bd32-6a0d0b1e5c84",
      "answer": false,
      "example": false
    },
    {
      "id": "f17ddc0f-ecd5-4625-bf6a-3afecb8d388c",
      "answer": false,
      "example": false
    },
    {
      "id": "5130ff59-5fe9-4d7f-a4e6-65937be9af5e",
      "answer": false,
      "example": false
    },
    {
      "id": "5ce24550-8197-452a-bafd-2f89b6e25e7f",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/clousure.mdx": [
    {
      "id": "45dd13e1-36ed-456e-88f1-caba15db357d",
      "answer": false,
      "example": false
    },
    {
      "id": "69c0d9bc-b5bc-420d-87dc-e821b7f49fd1",
      "answer": false,
      "example": false
    },
    {
      "id": "377a5d18-2d81-4169-8fc6-575022c858a2",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/event-delegation.mdx": [
    {
      "id": "5597c92a-e4a1-4ab6-a977-fa2d9d17dcba",
      "answer": false,
      "example": false
    },
    {
      "id": "33bc615a-15e0-4e18-831a-8e268dedefa0",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/event-loop.mdx": [
    {
      "id": "1b1da507-7245-470e-b158-a58c1674377d",
      "answer": false,
      "example": false
    },
    {
      "id": "8251de1e-1353-4e92-98d8-4fc9f2f1cee5",
      "answer": false,
      "example": false
    },
    {
      "id": "e6c56327-207d-4ff2-8132-cf49033374ab",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/falsy-values.mdx": [
    {
      "id": "042eb8f8-91e4-4e31-b41d-065cc8a517d2",
      "answer": false,
      "example": false
    },
    {
      "id": "11e12ca4-f679-4eac-9b71-c3b51da6f05a",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/promise.mdx": [
    {
      "id": "721e0da2-38e4-4940-bf64-a614be5f7134",
      "answer": false,
      "example": false
    },
    {
      "id": "aafd518e-2c97-47e3-a937-be7de57b6fa7",
      "answer": false,
      "example": false
    },
    {
      "id": "c55ce850-7621-417c-a8fb-4791a99302e5",
      "answer": false,
      "example": true,
      "children": "class Repo {\n  static getName() {\n    return 'Repo name is modern-js-cheatsheet'\n  }\n}\n\n// нам не нужно создавать объект класса Repo\nconsole.log(Repo.getName()) // \"Repo name is modern-js-cheatsheet\"\n\nlet r = new Repo()\nconsole.log(r.getName()) // необработанная ошибка TypeError: r.getName не является функцией",
      "className": "js"
    },
    {
      "id": "8849a945-3f03-49d5-bdb2-0b157b871c2c",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/protorype-inheratence.mdx": [
    {
      "id": "0a79ecc1-0bb7-43b8-abee-5edb69c0aa04",
      "answer": false,
      "example": false
    },
    {
      "id": "424e3d11-7fb4-40f4-b292-0a535f63a524",
      "answer": false,
      "example": false
    },
    {
      "id": "0ad3159d-bc16-4912-9800-a9564455b71c",
      "answer": false,
      "example": false
    },
    {
      "id": "e07fb30d-f655-4f48-b976-631e20f4b80f",
      "answer": false,
      "example": false
    },
    {
      "id": "271eb80a-3c44-4346-ab6e-a51fbb5be110",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/set-map-weakset-weak-map.mdx": [
    {
      "id": "1a3ea0bd-24f6-4d4b-afff-f068e888196a",
      "answer": false,
      "example": false
    },
    {
      "id": "9a1ddefd-ce27-4079-88e8-ad3e5ec096a1",
      "answer": false,
      "example": false
    },
    {
      "id": "b7c3ab37-5f0a-4926-925e-44114df29c6d",
      "answer": false,
      "example": true,
      "children": "'use strict'\n\nlet map = new Map()\n\nmap.set('1', 'str1') // ключ-строка\nmap.set(1, 'num1') // число\nmap.set(true, 'bool1') // булевое значение\n\n// в обычном объекте это было бы одно и то же,\n// map сохраняет тип ключа\nalert(map.get(1)) // 'num1'\nalert(map.get('1')) // 'str1'\n\nalert(map.size) // 3",
      "className": "js"
    },
    {
      "id": "10292af6-1e51-4b42-ae57-fa8e124ae3ce",
      "answer": false,
      "example": false
    },
    {
      "id": "eafb387a-012c-49b7-814f-401b2fe3513b",
      "answer": false,
      "example": true,
      "children": "'use strict'\n\nlet set = new Set()\n\nlet vasya = { name: 'Вася' }\nlet petya = { name: 'Петя' }\nlet dasha = { name: 'Даша' }\n\n// посещения, некоторые пользователи заходят много раз\nset.add(vasya)\nset.add(petya)\nset.add(dasha)\nset.add(vasya)\nset.add(petya)\n\n// set сохраняет только уникальные значения\nalert(set.size) // 3\n\nset.forEach(user => alert(user.name)) // Вася, Петя, Даша",
      "className": "js"
    },
    {
      "id": "f099176d-6296-4c27-993e-98db3d6867a8",
      "answer": false,
      "example": false
    },
    {
      "id": "b2d6f9cd-9c2e-4a7d-8f9b-41a2b8f33094",
      "answer": false,
      "example": true,
      "children": "// текущие активные пользователи\nlet activeUsers = [{ name: 'Вася' }, { name: 'Петя' }, { name: 'Маша' }]\n\n// вспомогательная информация о них,\n// которая напрямую не входит в объект юзера,\n// и потому хранится отдельно\nlet weakMap = new WeakMap()\n\nweakMap.set(activeUsers[0], 1)\nweakMap.set(activeUsers[1], 2)\nweakMap.set(activeUsers[2], 3)\nweakMap.set('Katya', 4) //Будет ошибка TypeError: \"Katya\" is not a non-null object\n\nalert(weakMap.get(activeUsers[0])) // 1\n\nactiveUsers.splice(0, 1) // Вася более не активный пользователь\n\n// weakMap теперь содержит только 2 элемента\n\nactiveUsers.splice(0, 1) // Петя более не активный пользователь\n\n// weakMap теперь содержит только 1 элемент",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/question/this-keyword.mdx": [
    {
      "id": "db806dd9-abf4-4948-af79-b3c28e99525b",
      "answer": false,
      "example": false
    },
    {
      "id": "17e0dc27-40c6-42f9-a31a-3dbfa75cb0b0",
      "answer": false,
      "example": false
    },
    {
      "id": "b9f297aa-5549-4934-9d2e-b5515c468ef0",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/array-unique-items.mdx": [
    {
      "id": "d3bc085e-d912-44ea-ad5b-550e1658f548",
      "answer": false,
      "example": true,
      "children": "() => {\n  const list = [1, 1, 2, 2, 3, 4]\n\n  function unique(arr) {\n    // write your code here \n    return arr\n  }\n\n  const result = unique(list) \n  return JSON.stringify(result) // => [1,2,3,4]\n}",
      "className": "jsx"
    },
    {
      "id": "6cd7c8ce-07a0-4b78-95aa-9501efc7a726",
      "answer": true,
      "example": false,
      "children": "function unique(arr) {\n  return arr.filter((item, index, self) => self.indexOf(item) === index)\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/bomb.mdx": [
    {
      "id": "76a1dea3-3699-4684-8fd8-8af2263e22c7",
      "answer": false,
      "example": true,
      "children": "() => {\n  const [result, setResult] = useState('')\n  function Bomb(message, delay) {\n    // write your code here   \n  }\n  \n  new Bomb('Explosion!', 3)\n  return JSON.stringify(result) // => 'Explosion!'\n}",
      "className": "jsx"
    },
    {
      "id": "0a96a246-0928-4b9d-ba91-3ac87dcbcef1",
      "answer": true,
      "example": false,
      "children": "function Bomb(message, delay) {\n  this.message = message\n  setTimeout(this.blowUp.bind(this), delay * 1000)\n}\n\nBomb.prototype.blowUp = function () {\n  setResult(this.message) // or console.log(result)\n}\n\nnew Bomb('Explosion!', 3) // Через 3000ms выведет 'Explosion!'",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/clone-object.mdx": [
    {
      "id": "2e4b3f53-67f0-41be-b3f0-decfbf83c199",
      "answer": false,
      "example": true,
      "children": "() => {\n  const obj = { a: 1, b: 2, c: { d: 4 } }\n  const cloneObj = obj => {\n    // write your code here \n    return obj\n  }\n\n  const result = cloneObj(obj)\n  result.c.d = 10\n\n  return JSON.stringify(obj.c.d === 4) // => true\n}\n\n",
      "className": "jsx"
    },
    {
      "id": "bc3bd525-fb32-4fed-b8c3-a9e530692c0f",
      "answer": true,
      "example": false,
      "children": "// Через JSON.parse/stringify\nconst cloneObj = obj => JSON.parse(JSON.stringify(obj))\n\n// Через рекурсию\nconst cloneObj = (o, i, r) => {\n  r = o\n  if (r && typeof o == 'object') {\n    r = o instanceof Array ? [] : {}\n    for (i in o) if (o.hasOwnProperty(i)) r[i] = cloneObj(o[i])\n  }\n  return r\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/create-custom-promise.mdx": [
    {
      "id": "8872881c-9fa4-4d3e-a195-bf6c5025e99b",
      "answer": false,
      "example": true,
      "children": "() => {\n  const [result, setResult] = useState('')\n  class CustomPromise {\n    // write your code here \n  }\n\n  useEffect(() => {\n    let promise = new CustomPromise((resolver, reject) => {\n      setTimeout(() => {\n        const rand = Math.ceil(Math.random(1 * 1 + 6) * 6)\n        if (rand > 2) {\n          resolver('Success')\n        } else {\n          reject('Error')\n        }\n      }, 1000)\n    })\n\n    if (promise.then && promise.catch) {\n      promise\n        .then(function (response) {\n          setResult(response)\n        })\n        .catch(function (error) {\n          setResult(error)\n        })\n    }\n  }, [])\n\n  return result // => 'Success' or 'Error' \n}\n\n",
      "className": "jsx"
    },
    {
      "id": "6617b6f8-e9e6-4e1b-8cd4-236d70976dca",
      "answer": true,
      "example": false,
      "children": "class CustomPromise {\n  constructor(action) {\n    this.state = 'PENDING'\n    this.value = undefined\n    this.thenCallbacks = []\n    this.errorCallbacks = []\n    action(this.resolver.bind(this), this.reject.bind(this))\n  }\n\n  resolver(value) {\n    this.state = 'RESOLVED'\n    this.value = value\n    this.thenCallbacks.forEach(callback => {\n      callback(this.value)\n    })\n  }\n\n  reject(value) {\n    this.state = 'REJECTED'\n    this.value = value\n    this.errorCallbacks.forEach(callback => {\n      callback(this.value)\n    })\n  }\n\n  then(callback) {\n    this.thenCallbacks.push(callback)\n    return this\n  }\n\n  catch(callback) {\n    this.errorCallbacks.push(callback)\n    return this\n  }\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/create-function-debounce.mdx": [
    {
      "id": "2695cdc7-9fc0-4a52-94b9-1c98a681fe79",
      "answer": false,
      "example": true,
      "children": "() => {\n  const calledRef = useRef([])\n  const [timesCalledList, setTimesCalledList] = useState([])\n  const timesCalled = (value) => {\n    calledRef.current = [...calledRef.current, value]\n    setTimesCalledList(...timesCalledList, value)\n  }\n  \n  const debounce = (f, ms) => {\n    // write your code here\n  }\n\n  useEffect(() => {\n    let f = debounce(timesCalled, 1000)\n    if (f) {\n      f(1) // выполняется немедленно\n      f(2) // проигнорирован\n      setTimeout(() => f(4), 1100) // выполняется\n      setTimeout(() => f(5), 1500) // проигнорирован (прошло только 400 мс от последнего вызова) \n    }\n\n  }, [])\n\n  return JSON.stringify(calledRef.current) // => [1,4]\n}\n",
      "className": "jsx"
    },
    {
      "id": "fff216d4-ed6d-4d2d-a56f-a9a953f4fe16",
      "answer": true,
      "example": false,
      "children": "const debounce = (f, ms) => {\n  let isCooldown = false\n\n  return function () {\n    if (isCooldown) return\n\n    f.apply(this, arguments)\n\n    isCooldown = true\n\n    setTimeout(() => (isCooldown = false), ms)\n  }\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/create-function-throttle.mdx": [
    {
      "id": "a4c3e1ff-38d0-4012-b5f0-f9e54413821a",
      "answer": false,
      "example": true,
      "children": "() => {\n  const calledRef = useRef([])\n  const [timesCalledList, setTimesCalledList] = useState([])\n  const timesCalled = (value) => {\n    calledRef.current = [...calledRef.current, value]\n    setTimesCalledList(...timesCalledList, value)\n  }\n\n  const throttle = (f, ms) => {\n    // write your code here\n  }\n\n  useEffect(() => {\n    // f1000 передаёт вызовы f максимум раз в 1000 мс\n    let f1000 = throttle(timesCalled, 1000)\n \n    if (f1000) {\n      f1000(1) // показывает 1\n      f1000(2) // (ограничение, 1000 мс ещё нет)\n      f1000(3) // (ограничение, 1000 мс ещё нет)\n\n      // когда 1000 мс истекли ...\n      // ...выводим 3, промежуточное значение 2 было проигнорировано\n    }\n  }, [])\n\n  return JSON.stringify(calledRef.current) // => [1,3]\n}\n",
      "className": "jsx"
    },
    {
      "id": "0be2cd29-d590-420b-ab5a-fd1671be614d",
      "answer": true,
      "example": false,
      "children": "const throttle = (func, ms) => {\n  let isThrottled = false,\n    savedArgs,\n    savedThis\n\n  function wrapper() {\n    if (isThrottled) {\n      savedArgs = arguments\n      savedThis = this\n      return\n    }\n\n    func.apply(this, arguments) \n\n    isThrottled = true\n\n    setTimeout(function () {\n      isThrottled = false \n      if (savedArgs) {\n        wrapper.apply(savedThis, savedArgs)\n        savedArgs = savedThis = null\n      }\n    }, ms)\n  }\n\n  return wrapper\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/create-method-reduce.mdx": [
    {
      "id": "a268ea45-aff8-49fb-9155-c0f9e1113c12",
      "answer": false,
      "example": true,
      "children": "() => {\n  let arr = [1, 2, 3, 4, 5]\n\n  Array.prototype.myReduce = function (func, initState) {\n    // write your code here\n    return initState\n  }\n\n  const result = arr.myReduce((curr, next) => (curr += next), 0) \n\n  return JSON.stringify(result) // => 15\n}",
      "className": "jsx"
    },
    {
      "id": "89b7b1c4-d89c-45ec-863d-657a6e42a710",
      "answer": true,
      "example": false,
      "children": "Array.prototype.myReduce = function (func, initState) {\n  const arr = this\n  const callback = func\n  let init = initState\n\n  arr.forEach(function (value, index) {\n    init = callback(init, value)\n  })\n  return init\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/create-promise-all.mdx": [
    {
      "id": "61c48ead-19c3-4f44-ae9e-5de087cb1b49",
      "answer": false,
      "example": true,
      "children": "() => {\n  const [result, setTesult] = useState({})\n  function promiseAll(promises) {\n    // write your code here\n  }\n\n  useEffect(() => {\n    if (promiseAll.then) {\n      promiseAll([\n        new Promise(resolve => {\n          setTimeout(() => resolve('foo'), 3000)\n        }),\n\n        new Promise((resolve, reject) => {\n          setTimeout(() => resolve('bar'), 3000)\n        }),\n\n        new Promise((resolve, reject) => {\n          setTimeout(() => {\n            Math.round(Math.random() * 10) % 2 === 0 ? resolve('baz') : reject('Error')\n          }, 300)\n        }),\n      ])\n        .then(res => setTesult(res))\n        .catch(err => setTesult(err))\n    }\n  }, [])\n  return JSON.stringify(result) // => [\"foo\",\"bar\",\"baz\"] or \"Error\"\n}\n\n",
      "className": "jsx"
    },
    {
      "id": "b2de8f6f-29ff-4725-b041-9cb638cba746",
      "answer": true,
      "example": false,
      "children": "function promiseAll(promises) {\n  return new Promise((resolve, reject) => {\n    const results = []\n    let resolvedCount = 0\n\n    promises.forEach((promise, index) => {\n      promise\n        .then(result => {\n          results[index] = result\n\n          resolvedCount++\n\n          if (resolvedCount === promises.length) {\n            resolve(results)\n          }\n        })\n        .catch(err => reject(err))\n    })\n  })\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/create-prototype-bind.mdx": [
    {
      "id": "f87b06c9-bd7c-4f2a-9524-155ac44c23a4",
      "answer": false,
      "example": true,
      "children": "() => {\n  let user = {\n    firstName: \"Арсений\"\n  };\n\n  Function.prototype.myBind = function (context, ...argsBind) {\n    // write your code here\n    return () => ''\n  }\n  \n  function func() {\n    return this.firstName;\n  }\n  \n  let funcUser = func.myBind(user)\n\n  return JSON.stringify(funcUser()) // => Арсений\n}",
      "className": "jsx"
    },
    {
      "id": "df46a6e3-d87f-4ed7-bbf9-97173e381da2",
      "answer": true,
      "example": false,
      "children": "Function.prototype.myBind = function (context, ...argsBind) {\n  const fn = this\n  return function (...args) {\n    return fn.apply(context, argsBind.concat(args))\n  }\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/how-to-delegation.mdx": [
    {
      "id": "743865a0-e0ba-44a0-9857-3cd3ff6b4055",
      "answer": false,
      "example": true,
      "children": "() => {\n  const delegate = (eventName, el, selector, handler) => {\n    // write your code\n  }\n\n  useEffect(() => {\n    if (document) {\n      delegate(\n        'click',\n        document.querySelector('.wrapper'),\n        '.child',\n        el => (el.style.backgroundColor = 'blue')\n      )\n    }\n  }, [])\n\n  return (\n    <div class=\"wrapper\">\n      <div class=\"child\">\n        <div>\n          <div>\n            <div>click me</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"child\">\n        <div>\n          <div>\n            <div>click me</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"child\">\n        <div>\n          <div>\n            <div>click me</div>\n          </div>\n        </div>\n      </div>\n      <div class=\"other\">\n        <div>\n          <div>\n            <div>dont't click me</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
      "className": "jsx"
    },
    {
      "id": "43fe0dab-43d3-4faf-9627-d18157dcea8c",
      "answer": true,
      "example": false,
      "children": "const delegate = (eventName, el, selector, handler) => {\n  el.addEventListener(eventName, event => {\n    let node = event.target\n    const items = [].slice.call(el.querySelectorAll(selector))\n\n    if (items.length) {\n      while (node !== el && node !== null) {\n        const isTarget = items.some(item => node === item)\n\n        if (isTarget) {\n          handler(node)\n          break\n        } else {\n          node = node.parentNode\n        }\n      }\n    }\n  })\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/is-pallindrom.mdx": [
    {
      "id": "9dbd7b2e-9614-4292-886b-5c279d9ff1f1",
      "answer": false,
      "example": true,
      "children": "() => {\n  function isEqualSymbols(str1, str2) {\n    // write your code here\n  }\n\n  return JSON.stringify(\n    [isEqualSymbols('cat', 'tac'), isEqualSymbols('kit', 'tok')]\n  ) // => [true, false]\n}",
      "className": "jsx"
    },
    {
      "id": "472f23bb-7635-48f7-b60a-fce076b8efdb",
      "answer": true,
      "example": false,
      "children": "function isEqualSymbols(str1, str2) {\n  if (str1.length !== str2.length) {\n    return false\n  }\n\n  if (str1.split('').sort().join('') === str2.split('').sort().join('')) {\n    return true\n  }\n\n  return false\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/make-flat-array.mdx": [
    {
      "id": "70baa5f2-07a3-434f-8c2b-8eda888c01ce",
      "answer": false,
      "example": true,
      "children": "() => {\n  let arr = [1, 2, [3, 4, [5, 6, [7, [8, 9, 10]]]]]\n\n  function flatten(arr) {\n    //write your code here\n    return arr\n  }\n\n  const result = flatten(arr)\n\n  return JSON.stringify(result) // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n}",
      "className": "jsx"
    },
    {
      "id": "cfbefd02-7d25-45b2-a331-da7df81b1789",
      "answer": true,
      "example": false,
      "children": "function flatten(arr) {\n  return arr.reduce(function (acc, next) {\n    let isArray = Array.isArray(next)\n    return acc.concat(isArray ? flatten(next) : next)\n  }, [])\n}\n\nif (!Array.prototype.flatten) {\n  Array.prototype.flatten = function () {\n    return flatten(this)\n  }\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/odd-sort.mdx": [
    {
      "id": "049666eb-8f47-44d2-a8a9-774d9dd945b6",
      "answer": false,
      "example": true,
      "children": "() => {\n  function oddSort(arr) {\n    // write your code here\n    return arr\n  }\n  \n  return JSON.stringify(oddSort([7, 3, 4, 9, 5, 2, 17])) // => [3, 5, 4, 7, 9, 2, 17]\n}",
      "className": "jsx"
    },
    {
      "id": "b41c8332-ac85-4d05-a22f-ee2cd88dcffd",
      "answer": true,
      "example": false,
      "children": "function oddSort(arr) {\n  arr.forEach((item, index) => {\n    if (item % 2 === 1) {\n      let sortNumber = item\n\n      for (let i = 0; i < index; i++) {\n        if (arr[i] % 2 === 1) {\n          if (arr[i] > sortNumber) {\n            const tmp = sortNumber\n\n            sortNumber = arr[i]\n            arr[i] = tmp\n          }\n        }\n      }\n      arr[index] = sortNumber\n    }\n  })\n\n  return arr\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/js/task/sum-of-tree.mdx": [
    {
      "id": "b605751c-f996-404a-9884-ac9055df0a9b",
      "answer": false,
      "example": true,
      "children": "() => {\n  function sumTree(tree) {\n    // write your code here\n   return null\n  }\n\n  const tree = {\n    value: 5,\n    right: {\n      value: 5,\n      right: {\n        value: 5,\n        right: {\n          value: 10,\n        },\n      },\n      left: {\n        value: 5,\n        left: {\n          value: 1,\n        },\n      },\n    },\n  }\n\n  return JSON.stringify(sumTree(tree)) // => 31\n}",
      "className": "jsx"
    },
    {
      "id": "7af03972-f8e4-4aa9-b1ef-abfb9b485ac4",
      "answer": true,
      "example": false,
      "children": "function sumTree(tree) {\n  let count = tree.value\n  if (tree.left) {\n    count += sumTree(tree.left)\n  }\n  if (tree.right) {\n    count += sumTree(tree.right)\n  }\n\n  return count\n}",
      "className": "js"
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/react/question/difference-between-props-and-state.mdx": [
    {
      "id": "2a3efb38-7a12-4b8b-998f-0b18778ee1ae",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/react/question/key.mdx": [
    {
      "id": "a00e04e8-30a3-4144-8455-1c7545e47def",
      "answer": false,
      "example": false
    },
    {
      "id": "611fda7f-156d-4e65-81e9-92d62e94c632",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/react/question/portal.mdx": [
    {
      "id": "82e27536-cb10-4e91-b051-6e6a144fd278",
      "answer": false,
      "example": false
    },
    {
      "id": "0833087c-294b-4594-8592-82c28cc7d5b8",
      "answer": false,
      "example": true,
      "children": "ReactDOM.createPortal(child, container)",
      "className": "js"
    },
    {
      "id": "5e2928d4-0609-4ef8-b775-16369223e456",
      "answer": false,
      "example": false
    },
    {
      "id": "d1d17539-a1c4-4934-99a7-ae2bae07e397",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/react/question/pure-component.mdx": [
    {
      "id": "416e1b40-410f-437a-9406-12b1408d4dbf",
      "answer": false,
      "example": false
    },
    {
      "id": "c4717c7b-6a16-48b9-97b0-7ed32b63531c",
      "answer": false,
      "example": false
    },
    {
      "id": "ed14983a-d080-4ba5-9593-b820238e3cb4",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/react/question/react-lifecycle.mdx": [
    {
      "id": "3026f0a3-225e-4e65-a1c8-b0a8e60eb039",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/react/question/react-reconciliation.mdx": [
    {
      "id": "47b3be62-7e99-4701-8178-9984ec4319f7",
      "answer": false,
      "example": false
    },
    {
      "id": "5911e1fc-f4d4-4797-a29d-8ed2260eab72",
      "answer": false,
      "example": false
    },
    {
      "id": "b58f1e46-b9bc-471a-9bbf-9d1751b45f3e",
      "answer": false,
      "example": false
    },
    {
      "id": "a4aad7e4-23f1-4832-a6b8-a1beb1185876",
      "answer": false,
      "example": false
    },
    {
      "id": "802c9364-16f2-482d-a36f-f97ca09df4c2",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/react/question/type-or-react-component.mdx": [
    {
      "id": "1842a06f-4bca-4c3e-8901-f924d00253be",
      "answer": false,
      "example": false
    },
    {
      "id": "4639577e-d823-41b7-92ce-4e6170fe9c1a",
      "answer": false,
      "example": false
    },
    {
      "id": "7ed2235d-1f6b-40dc-ac14-2f04f652fd41",
      "answer": false,
      "example": false
    },
    {
      "id": "3cbb05cc-bd07-4d78-ac26-ca497ad26df3",
      "answer": false,
      "example": false
    },
    {
      "id": "e5b50c17-ffbe-48d2-b48c-62ac36242208",
      "answer": false,
      "example": false
    }
  ],
  "/Users/ars/Desktop/sandbox/frontendinterview/pages/ru/react/task/buggy-counter.mdx": [
    {
      "id": "7b6b1d61-4c20-4c4e-b3b3-a3a9923e5a4c",
      "answer": false,
      "example": true,
      "children": "class BuggyCounter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      counter: 0,\n    }\n  }\n\n  handleClick() {\n    this.setState({ counter: this.state.counter + 1 })\n    this.setState({ counter: this.state.counter + 1 })\n    this.setState({ counter: this.state.counter + 1 })\n    this.setState({ counter: this.state.counter + 1 })\n    this.setState({ counter: this.state.counter + 1 })\n  }\n\n  render() {\n    return (\n      <div>\n        <span>current state: {this.state.counter}</span>\n        <br />\n        <button onClick={this.handleClick}>count!</button>\n      </div>\n    )\n  }\n}",
      "className": "jsx"
    },
    {
      "id": "49836d48-3308-4ffa-bfca-d503332ffe8b",
      "answer": true,
      "example": false,
      "children": "class BuggyCounter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      counter: 0,\n    }\n  }\n\n  handleClick() {\n    this.setState(prev => ({ counter: prev.counter + 1 }))\n    this.setState(prev => ({ counter: prev.counter + 1 }))\n    this.setState(prev => ({ counter: prev.counter + 1 }))\n    this.setState(prev => ({ counter: prev.counter + 1 }))\n    this.setState(prev => ({ counter: prev.counter + 1 }))\n  }\n\n  render() {\n    return (\n      <div>\n        <span>current state: {this.state.counter}</span>\n        <br />\n        <button onClick={this.handleClick.bind(this)}>count!</button>\n      </div>\n    )\n  }\n}",
      "className": "jsx"
    }
  ]
}
