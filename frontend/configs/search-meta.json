[
  {
    "content": "Что выведет код этот код?",
    "id": "c0e50580-f74e-4e2a-a05c-b49751355bfa",
    "type": "lvl1",
    "url": "/ru/js/example/code-examples",
    "hierarchy": {
      "lvl1": "Что выведет код этот код?",
      "lvl2": "Подборка примеров кода"
    }
  },
  {
    "content": "Какие методы перебора массива есть?",
    "id": "9101daac-4d49-4045-99a4-229c2e2809c9",
    "type": "lvl1",
    "url": "/ru/js/question/array-iterate-methods",
    "hierarchy": {
      "lvl1": "Какие методы перебора массива есть?",
      "lvl3": ["array", "forEach", "filer", "map", "every", "some", "reduce"]
    }
  },
  {
    "content": "Что такое замыкание и как/для чего его используют?",
    "id": "530e0937-53ce-44da-bf03-505c7feeb500",
    "type": "lvl1",
    "url": "/ru/js/question/clousure",
    "hierarchy": {
      "lvl1": "Что такое замыкание и как/для чего его используют?",
      "lvl3": ["fundamental", "closure", "function"]
    }
  },
  {
    "content": "Объясните делегирование событий",
    "id": "72126a3c-44a7-4383-88de-f26210e31298",
    "type": "lvl1",
    "url": "/ru/js/question/event-delegation",
    "hierarchy": {
      "lvl1": "Объясните делегирование событий",
      "lvl3": ["fundamental", "event delegation"]
    }
  },
  {
    "content": "Как проверять значения на равенство null и undefined?",
    "id": "512ec447-9a45-4649-8c35-82d17502ba1e",
    "type": "lvl1",
    "url": "/ru/js/question/falsy-values",
    "hierarchy": {
      "lvl1": "Как проверять значения на равенство null и undefined?",
      "lvl3": ["falsy values"]
    }
  },
  {
    "content": "Расскажите, как работает прототипное наследование",
    "id": "ae09edb7-903b-43b1-8b72-76ddf4aaca5d",
    "type": "lvl1",
    "url": "/ru/js/question/protorype-inheratence",
    "hierarchy": {
      "lvl1": "Расскажите, как работает прототипное наследование",
      "lvl3": ["fundamental", "prototype inheritance"]
    }
  },
  {
    "content": "Уникализация значений в массиве",
    "id": "9628033f-f8e1-4104-bd2c-c73603c6e8bc",
    "type": "lvl1",
    "url": "/ru/js/task/array-unique-items",
    "hierarchy": {
      "lvl1": "Уникализация значений в массиве",
      "lvl2": "Необходимо написать функцию, принимающую в аргументах массив целых чисел и возвращающую новый массив, состоящий только из уникальных значений первого массива.",
      "lvl3": ["array"]
    }
  },
  {
    "content": "Бомба",
    "id": "537b6550-8633-4f2a-a8f7-8877d2194daf",
    "type": "lvl1",
    "url": "/ru/js/task/bomb",
    "hierarchy": {
      "lvl1": "Бомба",
      "lvl2": "Надо реализовать «бомбу» (в виде функции-конструктора), которая получает на входе время, через которое взорвется и некоторый «звук взрыва» (строку, которую вернет через заданное время)",
      "lvl3": ["prototype", "class"]
    }
  },
  {
    "content": "Какие есть способы сколнировать объект",
    "id": "a034911d-d53f-4bd1-9719-bb3e32923a57",
    "type": "lvl1",
    "url": "/ru/js/task/clone-object",
    "hierarchy": {
      "lvl1": "Какие есть способы сколнировать объект",
      "lvl2": "Склонировать объект можно минимум 4 разными способами",
      "lvl3": ["spread", "assign", "object"]
    }
  },
  {
    "content": "Создайте промис с нуля",
    "id": "c2c3717a-ed2b-4a0b-8851-add48abd7e27",
    "type": "lvl1",
    "url": "/ru/js/task/create-custom-promise",
    "hierarchy": { "lvl1": "Создайте промис с нуля", "lvl3": ["promise"] }
  },
  {
    "content": "Реализуйте функцию debounce",
    "id": "4cb51904-77d1-402e-ab99-deadde0d734f",
    "type": "lvl1",
    "url": "/ru/js/task/create-function-debounce",
    "hierarchy": {
      "lvl1": "Реализуйте функцию debounce",
      "lvl3": ["array", "debounce"]
    }
  },
  {
    "content": "Реализуйте функцию throttle",
    "id": "a7cc3d79-93e2-4d8c-9f11-49f57f0fac85",
    "type": "lvl1",
    "url": "/ru/js/task/create-function-throttle",
    "hierarchy": {
      "lvl1": "Реализуйте функцию throttle",
      "lvl3": ["array", "throttle"]
    }
  },
  {
    "content": "Реализуйте метод bind",
    "id": "3d3a15f5-32d6-473d-bf7d-3625d0c1c615",
    "type": "lvl1",
    "url": "/ru/js/task/create-method-bind",
    "hierarchy": { "lvl1": "Реализуйте метод bind", "lvl3": ["array", "bind"] }
  },
  {
    "content": "Реализуйте метод reduce",
    "id": "39e854b7-c550-4dc6-899f-b02af7b27dc0",
    "type": "lvl1",
    "url": "/ru/js/task/create-method-reduce",
    "hierarchy": {
      "lvl1": "Реализуйте метод reduce",
      "lvl3": ["array", "reduce"]
    }
  },
  {
    "content": "Реализуйте аналог Promise.all",
    "id": "b141cb7a-c20f-4287-9cc6-c409a621d363",
    "type": "lvl1",
    "url": "/ru/js/task/create-promise-all",
    "hierarchy": {
      "lvl1": "Реализуйте аналог Promise.all",
      "lvl3": ["promise"]
    }
  },
  {
    "content": "Реализовуйте аналог Function.prototype.bind",
    "id": "b708afb3-fb3c-404c-9114-d1fe7a550017",
    "type": "lvl1",
    "url": "/ru/js/task/create-prototype-bind",
    "hierarchy": {
      "lvl1": "Реализовуйте аналог Function.prototype.bind",
      "lvl3": ["prototype"]
    }
  },
  {
    "content": "Реализуйте делегирование",
    "id": "8b67efc4-b90e-4b35-9f2a-371de026ff57",
    "type": "lvl1",
    "url": "/ru/js/task/how-to-delegation",
    "hierarchy": {
      "lvl1": "Реализуйте делегирование",
      "lvl3": ["event delegation"]
    }
  },
  {
    "content": "Идентичный алфавит",
    "id": "439cb2f2-5b29-42c5-a703-69ea6c6c8510",
    "type": "lvl1",
    "url": "/ru/js/task/is-pallindrom",
    "hierarchy": {
      "lvl1": "Идентичный алфавит",
      "lvl2": "Необходимо написать функцию, принимающую в аргументах две строки и возвращающую true, если эти строки состоят из идентичных букв и false в противном случае.",
      "lvl3": ["string", "sort"]
    }
  },
  {
    "content": "Сделайте вложенный массив плоским",
    "id": "8a4275c3-4868-4ddb-8d74-0fa576e1c1e5",
    "type": "lvl1",
    "url": "/ru/js/task/make-flat-array",
    "hierarchy": {
      "lvl1": "Сделайте вложенный массив плоским",
      "lvl3": ["array", "flat"]
    }
  },
  {
    "content": "Сортировка нечётных",
    "id": "fbff2aaf-02b0-4ace-b770-836565c2ec0a",
    "type": "lvl1",
    "url": "/ru/js/task/odd-sort",
    "hierarchy": {
      "lvl1": "Сортировка нечётных",
      "lvl2": "Необходимо написать функцию, принимающую в аргументах массив и возвращающую новый массив, в котором отсортированы все нечетные числа по возрастанию, в то время как чётные остаются на своих местах.",
      "lvl3": ["array", "sort"]
    }
  },
  {
    "content": "Сумма вершин дерева",
    "id": "c36a5339-b9b9-4b66-af72-5ed3b54226c8",
    "type": "lvl1",
    "url": "/ru/js/task/sum-of-tree-vertices",
    "hierarchy": {
      "lvl1": "Сумма вершин дерева",
      "lvl3": ["array", "recursion"]
    }
  },
  {
    "content": "Сумма вершин дерева",
    "id": "6d25c57d-0a6b-4cd8-8343-a94002ddb611",
    "type": "lvl1",
    "url": "/ru/js/task/sum-of-tree",
    "hierarchy": {
      "lvl1": "Сумма вершин дерева",
      "lvl2": "Найдите сумму вершин для дерева",
      "lvl3": ["array", "recursion"]
    }
  },
  {
    "content": "Что такое props и state в React",
    "id": "9454a081-b7c0-4f32-b362-a79e76f36629",
    "type": "lvl1",
    "url": "/ru/react/question/difference-between-props-and-state",
    "hierarchy": {
      "lvl1": "Что такое props и state в React",
      "lvl3": ["react state", "react state"]
    }
  },
  {
    "content": "Для чего нужен атрибут key при рендере списков?",
    "id": "532ea07c-23da-49db-a00e-e28fb6cdb2e2",
    "type": "lvl1",
    "url": "/ru/react/question/key",
    "hierarchy": {
      "lvl1": "Для чего нужен атрибут key при рендере списков?",
      "lvl3": ["react key"]
    }
  },
  {
    "content": "Какие основные типы компонент есть в React",
    "id": "a9118f30-e451-4bbc-8282-1e7ca5d3f5eb",
    "type": "lvl1",
    "url": "/ru/react/question/type-or-react-component",
    "hierarchy": {
      "lvl1": "Какие основные типы компонент есть в React",
      "lvl3": ["react component"]
    }
  }
]
